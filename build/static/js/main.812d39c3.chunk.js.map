{"version":3,"sources":["potrait_logo.png","tactical_combat_icon.png","mw_logo_1.png","play_store_logo.png","games_mock.png","Menu.js","MenuItem.js","GameItem.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","props","id","children","MenuItem","className","GameItem","buttonname","onClickHandler","url","window","open","style","textAlign","height","title","src","image","ripple","onPress","position","top","marginBottom","size","type","psl","width","HOME","logo","gmi","tcl","mwl","App","Home","Boolean","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,uC,iBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,+NCS5BC,G,kBANJ,SAAAC,GACP,OACI,yBAAKC,GAAG,QAAQD,EAAME,YCMfC,G,MARA,SAAAH,GACX,OACI,yBAAKI,UAAU,YACX,0BAAMA,UAAU,gBAAgBJ,EAAME,a,qGCuBnCG,EAtBA,SAAAL,GACX,IAAIM,EAAW,eACXC,EAAe,aASnB,OANGP,EAAMQ,MACLF,EAAW,UACXC,EAAe,WACXE,OAAOC,KAAKV,EAAMQ,IAAI,YAI1B,yBAAKP,GAAG,gBACJ,wBAAIU,MAAO,CAACC,UAAU,SAASC,OAAO,SACjCb,EAAMc,OAEX,yBAAKb,GAAG,gBAAgBc,IAAKf,EAAMgB,QACnC,gCAAQ,kBAAC,gBAAD,CAAeC,QAAM,EAACC,QAASX,EAAgBI,MAAO,CAACQ,SAAS,WAAWC,IAAI,OAAOC,aAAa,QAASC,KAAK,SAASC,KAAK,WAAU,yBAAKR,IAAKS,IAAKC,MAAM,OAAOZ,OAAO,SAAcP,M,kCCU/LoB,EAxBJ,SAAA1B,GACP,OACI,yBAAKC,GAAG,YACJ,yBAAKA,GAAG,aACJ,yBAAKA,GAAG,eAAc,yBAAKA,GAAG,UAAUc,IAAKY,OAC7C,yBAAK1B,GAAG,cACJ,wBAAIA,GAAG,gBAAP,yCACA,uBAAGA,GAAG,eAAN,4SACA,yBAAKA,GAAG,cAAcc,IAAKa,QAGnC,yBAAK3B,GAAG,eACJ,kBAAC,IAAD,KACI,wBAAIA,GAAG,iBAAP,cAEJ,yBAAKA,GAAG,YACJ,kBAAC,EAAD,CAAUO,IAAI,wEAAwEQ,MAAOa,IAAKf,MAAM,oBACxG,kBAAC,EAAD,CAAUE,MAAOc,IAAKhB,MAAM,iBCHjCiB,MAlBf,WACE,OACE,yBAAKpB,MAAO,CAACQ,SAAS,WAAWM,MAAM,SACrC,yBAAKxB,GAAG,aACN,0BAAMA,GAAG,SAAT,aACA,kBAAC,EAAD,KACE,kBAAC,EAAD,aACA,kBAAC,EAAD,cACA,kBAAC,EAAD,mBAGJ,yBAAKU,MAAO,CAACQ,SAAS,WAAWC,IAAI,GAAGK,MAAM,SAC5C,kBAACO,EAAD,SCNYC,QACW,cAA7BxB,OAAOyB,SAASC,UAEe,UAA7B1B,OAAOyB,SAASC,UAEhB1B,OAAOyB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.812d39c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/potrait_logo.8af6e8fb.png\";","module.exports = __webpack_public_path__ + \"static/media/tactical_combat_icon.e08894c2.png\";","module.exports = __webpack_public_path__ + \"static/media/mw_logo_1.cde2613f.png\";","module.exports = __webpack_public_path__ + \"static/media/play_store_logo.bff481a7.png\";","module.exports = __webpack_public_path__ + \"static/media/games_mock.2f4dbbdb.png\";","import React,{useEffect,useState} from 'react';\r\nimport './menu.css'\r\n\r\nconst Menu=props=>{\r\n    return(\r\n        <div id=\"menu\">{props.children}</div>\r\n    );\r\n};\r\n\r\nexport default Menu;","import React,{useEffect,useState} from 'react';\r\nimport './menuitem.css'\r\n\r\nconst MenuItem=props=>{\r\n    return(\r\n        <div className=\"menuitem\">\r\n            <span className=\"menuitemname\">{props.children}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuItem;","import React,{useEffect,useState} from 'react';\r\nimport './gameitem.css';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport psl from './play_store_logo.png';\r\nimport 'animate.css/animate.min.css';\r\n\r\nconst GameItem=props=>{\r\n    var buttonname=\"COMMING SOON\";\r\n    var onClickHandler=()=>{\r\n\r\n    };\r\n    if(props.url){\r\n        buttonname=\"GET APP\";\r\n        onClickHandler=()=>{\r\n            window.open(props.url,'_blank');\r\n        }\r\n    }\r\n    return(\r\n        <div id=\"gameitemroot\">\r\n            <h2 style={{textAlign:\"center\",height:'50px'}}>\r\n                {props.title}\r\n            </h2>\r\n            <img id=\"gameitemimage\" src={props.image}/>\r\n            <center><AwesomeButton ripple onPress={onClickHandler} style={{position:'relative',top:'10px',marginBottom:'10px'}} size=\"medium\" type=\"primary\"><img src={psl} width=\"30px\" height=\"30px\"></img>{buttonname}</AwesomeButton></center>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameItem;","import React,{useEffect,useState} from 'react';\r\nimport './home.css';\r\nimport logo from './potrait_logo.png';\r\nimport tcl from './tactical_combat_icon.png';\r\nimport mwl from './mw_logo_1.png';\r\nimport 'animate.css/animate.min.css';\r\nimport GameItem from './GameItem';\r\nimport gmi from './games_mock.png';\r\nimport RubberBand from 'react-reveal/RubberBand';\r\n\r\nconst HOME=props=>{\r\n    return(\r\n        <div id=\"homeroot\"> \r\n            <div id=\"homeintro\">\r\n                <div id=\"homelogodiv\"><img id=\"logoimg\" src={logo} /></div>\r\n                <div id=\"welcomediv\">\r\n                    <h1 id=\"welcometitle\">Welcome to NSI Games Official Website</h1>\r\n                    <p id=\"welcomedesc\">We are mobile games development studio under Nikhil Sai Infra Pvt Ltd company. We are committed to provide good entertaining games with new and refreshing ideas. We are working as an individual studio and have started this year 2020 to provide wonderful mobile games to you now and in the future.</p>\r\n                    <img id=\"gamemockimg\" src={gmi}/>\r\n                </div>\r\n            </div>\r\n            <div id=\"ourgamesdiv\">\r\n                <RubberBand>\r\n                    <h2 id=\"ourgamestitle\">OUR GAMES</h2>\r\n                </RubberBand>\r\n                <div id=\"gamesdiv\">\r\n                    <GameItem url=\"https://play.google.com/store/apps/details?id=com.msmg.TacticalCombat\" image={tcl} title=\"TACTICAL COMBAT\"/>\r\n                    <GameItem image={mwl} title=\"MAZE WAR\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HOME;","import React from 'react';\nimport './app.css';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div style={{position:'absolute',width:'100%'}}>\n      <div id=\"headerBar\">\n        <span id=\"title\">NSI GAMES</span>\n        <Menu>\n          <MenuItem>HOME</MenuItem>\n          <MenuItem>GAMES</MenuItem>\n          <MenuItem>ABOUT US</MenuItem>\n        </Menu>\n      </div>\n      <div style={{position:'relative',top:50,width:'100%'}}>\n        <Home/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}